from re import sub
def descriptografador(texto):
    decrypt_dict = {1 : {2 : 'a', 3 : 'd', 4 : 'g', 5 : 'j', 6 : 'm', 7 : 'p', 8 : 't', 9 : 'w'}, 2 : {22 : 'b', 33 : 'e', 44 : 'h', 55 : 'k', 66 : 'n', 77 : 'q', 88 : 'u', 99 : 'x'}, 3 : {222 : 'c', 333 : 'f', 444 : 'i', 555 : 'l', 666 : 'o', 777 : 'r', 888 : 'v', 999 : 'y'}, 4 : {7777 : 's', 9999 : 'z'}}
    """[Function for decrypt a text generated by cript]

    Args:
        texto ([str]): [text for decrypt]

    Returns:
        [str]: [text decrypt]
    """    

    # Text is empty?
    if texto == '':
        texto = input('Digite o texto: ')

    #Convers√£o da str para lista
    tmp = []
    na = 0
    ntmp = 0
    for i in texto:
        if i == '[' or i == ']':
            pass
        try:
            ntmp = int(str(ntmp) + str(i)) # Concatenation
        except ValueError:
            if i == ',':
                tmp.append(ntmp) # add
                ntmp = 0 # Concatenation reset
            elif i == ' ': # Space verification
                pass
            else: # Add a special character
                tmp.append(str(i))
        if i == "'" and na != 1: # Space text verification
            tmp.append('')
            na += 1
        elif na == 1:
            na = 0

    tmp.append(ntmp) # Final add
    texto = tmp # Text = list
    conver = ''

    for l in texto:
        if len(str(l)) == 1:
            if l in decrypt_dict[1]:
                conver += decrypt_dict[1][l]
        elif len(str(l)) == 2:
            if l in decrypt_dict[2]:
                conver += decrypt_dict[2][l]
        elif len(str(l)) == 3:
            if l in decrypt_dict[3]:
                conver += decrypt_dict[3][l]
        elif len(str(l)) == 4:
            if l in decrypt_dict[4]:
                conver += decrypt_dict[4][l]
        elif l == '':
            conver += ' '
        else :
            conver += l
    # Remove extra spaces
    conver = sub(' {2,}', ' ', conver).strip(' ')
    return conver
if __name__ == '__main__':
    print(descriptografador("[666, 77, ' ', 77, ' ', 8, 2, ' ', 777, 666, 555, 2, 66, 3, 666, '?']"))